<%- include('../layouts/adminLayouts/admin-header.ejs') %>

<body>
  <div class="container-scroller">
    <div class="container-fluid page-body-wrapper full-page-wrapper">
      <div class="row w-100">
        <div
          class="content-wrapper full-page-wrapper d-flex align-items-center auth login-bg">
          <div class="card col-lg-4 mx-auto">
            <div class="card-body px-5 py-5">
              <span id="error-message" style="color: orange; display: none"></span>
              <h3 class="card-title text-start mb-3">Reset Password</h3>
              <form class="admin-reset-password-form">
                <div class="form-group">
                    <label for="login-password">Enter New Password*</label>
                    <input type="password" name="password" id="new-password" class="form-control p_input" />
                    <span id="new-password-error" style="color: orangered; display: none"></span>
                  </div>
                <div class="form-group">
                  <label for="login-password"> Re-Enter Password*</label>
                  <input type="password" name="confirm-password" id="confirm-password" class="form-control p_input" />
                  <span id="confirm-password-error" style="color: orangered; display: none"></span>
                </div>
                <input type="hidden" name="userId" value="<%= userId %>" id="userId">
                <div class="form-group d-flex align-items-center justify-content-between">
                  <div class="form-check">
                    <label class="form-check-label">
                      <input type="checkbox" class="form-check-input" /> Show Password
                    </label>
                  </div>
                </div>
                <div class="text-center d-grid gap-2">
                  <button type="submit" id="confirm-button" class="btn btn-success btn-block enter-btn"> Change Password </button>
                </div>
                <p class="sign-up text-center">
                  Don't want to change password? <a href="#"> CANCEL</a>
                </p>
              </form>
            </div>
          </div>
        </div>
        <!-- content-wrapper ends -->
      </div>
      <!-- row ends -->
    </div>
    <!-- page-body-wrapper ends -->
  </div>
  <!-- container-scroller -->



<!-- --------------------------------------------------------------- -->



  <!-- plugins:js -->
  <script src="/assets/vendors/adminVendors/js/vendor.bundle.base.js"></script>
  <!-- endinject -->
  <!-- Plugin js for this page -->
  <!-- End plugin js for this page -->
  <!-- inject:js -->
  <script src="/assets/js/adminjs/off-canvas.js"></script>
  <script src="/assets/js/adminjs/hoverable-collapse.js"></script>
  <script src="/assets/js/adminjs/misc.js"></script>
  <script src="/assets/js/adminjs/settings.js"></script>
  <script src="/assets/js/adminjs/todolist.js"></script>
  <!-- endinject -->

   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <!-- ----------------------------------------------------------------------- -->
  

<!-- reset password form script -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
        const newPasswordInput = document.getElementById("new-password");
        const confirmPasswordInput = document.getElementById("confirm-password");
        const submitButton = document.getElementById("confirm-button");

        const newPasswordError = document.getElementById("new-password-error");
        const confirmPasswordError = document.getElementById("confirm-password-error");
        const errorMessage = document.getElementById("error-message");


        // Password validation
        function validateExpressions(password) {
            var uppercaseRegex = /[A-Z]/;
            var lowercaseRegex = /[a-z]/;
            var numberRegex = /[0-9]/;
            var symbolRegex = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
            return (
                uppercaseRegex.test(password) &&
                lowercaseRegex.test(password) &&
                numberRegex.test(password) &&
                symbolRegex.test(password)
            );
        }
      

        submitButton.addEventListener("click", function (event) {
            event.preventDefault();

            // Reset error messages
            newPasswordError.textContent = "";
            confirmPasswordError.textContent = "";

            const newPassword = newPasswordInput.value.trim();
            const confirmPassword = confirmPasswordInput.value.trim();
            const isValidPassword = validateExpressions(newPassword);
            const userId = document.getElementById("userId").value;

            let isValid = true;
            let passwordRequiredErrorShown = false;


            if (!newPassword) {
                newPasswordError.textContent = "Password is required";
                newPasswordError.style.display = "block";
                passwordRequiredErrorShown = true;
                isValid = false;
            }
            
            if (newPassword.length < 8){
                if (!passwordRequiredErrorShown) { // Check the flag
                    newPasswordError.textContent = "Password should be at least 8 characters long and include a combination of uppercase and lowercase letters, numbers, and symbols.";
                    newPasswordError.style.display = "block";
                }
                isValid = false;
            } else if (!isValidPassword){
                if (!passwordRequiredErrorShown) {
                    newPasswordError.textContent = "Password should contain at least one uppercase letter, one lowercase letter, one number, and one symbol.";
                    newPasswordError.style.display = "block";
                }
                isValid = false;
            } else {
                newPasswordError.style.display = "none";
            }


            if (!confirmPassword) {
                confirmPasswordError.textContent = "Password is required";
                confirmPasswordError.style.display = "block";
                passwordRequiredErrorShown = true; // Set the flag to true
                isValid = false;
            } else if (newPassword != confirmPassword) {
                if (!passwordRequiredErrorShown) { // Check the flag
                    confirmPasswordError.textContent = "Password mismatch";
                    confirmPasswordError.style.display = "block";
                }
                isValid = false;
            } else {
                confirmPasswordError.style.display = "none";
            }



            if (!isValid) {
                return; // Prevent form submission
            } else {
                formSubmit(newPassword);
            }


            function formSubmit(newPassword) {
                const url = "/admin/reset-password";

                // Create fetch request
                fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ newPassword, userId }),
                })
                .then((response) => {
                if (response.ok) {
                    return response.json();
                } else {
                    console.error("Network response was not ok:", response.status);
                    return response.json();
                    // throw new Error('Network response was not ok.');
                }
                })
                // .then(response => response.json())
                .then((data) => {
                    
                if (data.success) {
                    // Show Sweet Alert for successful login
                    Swal.fire({
                        title: "Success!",
                        text: "You have successfully changed your password.",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1500,
                    }).then(() => {
                        window.location.href = "login"; // Redirect to login after 1.5 seconds
                    });
                    
                } else {
                    console.error("Login failed");
                }
                })
                .catch((error) => {
                console.error("Catch Error:", error);
                });

                window.formSubmit = formSubmit;
            }
        });



        // INDIVIDUAL CHECKING
        newPasswordInput.addEventListener('input', function(){            
            if (newPasswordInput.value === "" || newPasswordInput.value.length <8 && !validateExpressions(newPasswordInput.value)) {
                newPasswordError.textContent = "Password should be at least 8 characters long and include a combination of uppercase and lowercase letters, numbers, and symbols.";
                newPasswordError.style.display = 'block';
                isValid = false;
            }else if (!validateExpressions(newPasswordInput.value)){
                newPasswordError.textContent = "Password should contain at least one uppercase letter, one lowercase letter, one number, and one symbol.";
                newPasswordError.style.display = 'block';
                isValid = false;
            } else {
                newPasswordError.style.display = 'none';
            }
        });  

 


        confirmPasswordInput.addEventListener('input', function(){
            const confirmPassword = confirmPasswordInput.value.trim();
            const newPassword = newPasswordInput.value.trim();
            const isValidPassword = validateExpressions(newPassword);

            if (!confirmPassword) {
                confirmPasswordError.textContent = "Password is required";
                confirmPasswordError.style.display = "block";
                isValid = false;
            } else if (newPassword != confirmPassword) {
                confirmPasswordError.textContent = "Password mismatch";
                confirmPasswordError.style.display = "block";
                isValid = false;
            } else {
                confirmPasswordError.style.display = "none";
            }
        });



   });
   </script>
<!-- reset password form script ends -->


   <%- include('../layouts/adminLayouts/admin-footer.ejs') %>

   <!-- Mirrored from demo.bootstrapdash.com/corona-new/themes/modern-vertical/pages/samples/login.html by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 22 Apr 2024 10:43:02 GMT -->

</body>
