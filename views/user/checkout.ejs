<%- include('../layouts/userLayouts/user-header.ejs') %>

<%- include('../layouts/userLayouts/user-preloader.ejs') %>

<%- include('../layouts/userLayouts/user-navbar.ejs') %>




<main class="page-content">
    <div class="tm-section tm-checkout-area bg-white tm-padding-section">
        <div class="container">
            <!-- can give here or bottom side.  -->
            <!-- <div class="tm-checkout-coupon" id="coupon-area">
                <% if (userCart && userCart.couponRef == null) { %>
                    <a href="#checkout-couponform" data-toggle="collapse">
                        <span>Have a coupon code?</span> Click here and enter your code.
                    </a>
                    <div id="checkout-couponform" class="collapse">
                        <form action="#" class="tm-checkout-couponform">
                            <input type="text" id="coupon-field" placeholder="Enter coupon code" required="required" />
                            <button type="button" class="tm-button" onclick="applyCoupon()">Apply Coupon</button>
                        </form>
                    </div>
                <% } else { %>
                    <a href="#remove-couponform" data-toggle="collapse">
                        <span class="text-success">Coupon applied.</span> Click here to cancel the coupon.
                    </a>
                    <div id="remove-couponform" class="collapse">
                        <form action="#" class="tm-checkout-couponform" id="remove-coupon-form">
                            <input type="text" id="coupon-field" style="font-size: 25px; font-weight: 900; text-align: center;" 
                             placeholder="<%= userCart.couponRef.code %>" readonly>
                            <button type="button" class="tm-button" onclick="cancelCoupon()">Cancel Coupon</button>
                        </form>
                    </div>
                <% } %>
            </div> -->



            <!-- can give the address details here if needed (and if not given at bottom of this page) -->
            <!-- <div class="row checkout-border-row p-2 mb-5">
                <% if(userAddress && userAddress.address){ %>
                    <div>
                        <h4 class="small-title">BILLING INFORMATION</h4>
                        <p><b>The following address will be used for shipping by default.</b></p>
                        <a href="#" class="btn add-button btn-success text-white" data-toggle="modal" data-target="#addAddressModal"> Add Address </a>
                        <a href="#" class="btn add-button btn-primary text-white" data-toggle="modal" data-target="#chooseAddressModal">Choose Another Address</a> <br><br>
                    </div>
                    <div class="row mb-2">
                        <div class="col-lg-6 col-md-6">
                            <div class="tm-myaccount-address-billing bg-grey">
                                <div class="text-right">
                                    <a href="#" class="btn add-button btn-secondary text-white edit-address-link" id="edit-address-link"
                                    data-toggle="modal" data-target="#editAddressModal" 
                                    data-address-id="<%= userAddress.address[0]._id %>" 
                                    data-index="0" 
                                    data-firstname="<%= userAddress.address[0].firstname %>" 
                                    data-lastname="<%= userAddress.address[0].lastname %>" 
                                    data-street="<%= userAddress.address[0].street %>" 
                                    data-city="<%= userAddress.address[0].city %>" 
                                    data-state="<%= userAddress.address[0].state %>" 
                                    data-pincode="<%= userAddress.address[0].pincode %>" 
                                    data-contact="<%= userAddress.address[0].contact %>" >
                                    Edit </a>

                                    <address class="text-left">
                                        <%= userAddress.address[0].firstname %>
                                        <%= userAddress.address[0].lastname %> <br>
                                        <%= userAddress.address[0].street %> <br>
                                        <%= userAddress.address[0].city %> <br>
                                        <%= userAddress.address[0].state %>
                                        <%= userAddress.address[0].pincode %> <br>
                                        Phone: <%= userAddress.address[0].contact %> <br>
                                    </address>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } else{ %>
                    <div>
                        <p><b>"Hello! <br>
                            It seems there is no saved address in your profile.
                            Please add a new address to ensure smooth delivery of your orders. <br>
                            Thank you!"</b>
                        </p>
                    <a href="#" class="btn add-button btn-success text-white" data-toggle="modal" data-target="#addAddressModal"> Add Address </a> <br><br>
                    </div>
                <% } %>
            </div> -->


            <div class="row checkout-border-row p-2 mb-5">
                <div class="mb-1">
                    <h4 class="small-title">ITEMS IN YOUR SHOPPING CART</h4>
                </div>
                <div class="tm-cart-table table-responsive" id="cart-table">
                    <table class="table table-bordered mb-0">
                        <thead>
                            <tr>
                                <th class="tm-cart-col-image bg-light" scope="col">Image</th>
                                <th class="tm-cart-col-productname bg-light" scope="col">Product</th>
                                <th class="tm-cart-col-price bg-light" scope="col">Price</th>
                                <th class="tm-cart-col-quantity bg-light" scope="col">Quantity</th>
                                <th class="tm-cart-col-total bg-light" scope="col">Total</th>
                                <th class="tm-cart-col-actions bg-light" scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (userCart && userCart.product.length > 0){ %>
                                <% for(i=0; i< userCart.product.length; i++){ %>
                                    <tr>
                                        <td class="bg-light">
                                            <a href="/product-details?id=<%= userCart.product[i].productRef._id %>" class="tm-cart-productimage">
                                                <img src="assets/images/productImages/<%= userCart.product[i].productRef.images.image1 %>" alt="product image">
                                            </a>
                                            <% if(userCart.product[i].productRef.quantity === 0){ %>
                                                <h6 id="outofstock-error" style="color: red; display: block;"> Currently <br> Unavailable </h6>
                                            <% } %>
                                        </td>
                                        <td class="bg-light text-left">
                                            <h5><a href="/product-details?id=<%= userCart.product[i].productRef._id %>" class="tm-cart-productname"><%= userCart.product[i].productRef.name %></a></h5>
                                            <h6><%= userCart.product[i].productRef.code %></h6>
                                        </td>
                                        <% if (userCart.product[i].productRef.offerRef != null){ %>
                                            <td class="tm-cart-price bg-light">
                                                <del><h6 style="color: grey;">₹<%= (userCart.product[i].productRef.totalPrice).toFixed(2) %></h6></del>
                                                <h6>₹<%= ((userCart.product[i].productRef.totalPrice) - (userCart.product[i].productRef.makingCharge * userCart.product[i].productRef.offerRef.offerPercentage / 100)).toFixed(2) %></h6>
                                            </td>
                                        <% } else { %>
                                            <td class="tm-cart-price bg-light"> <h6>₹<%= (userCart.product[i].productRef.totalPrice).toFixed(2) %></h6></td>
                                        <% } %>

                                        <td class="bg-light">
                                            <div class="tm-quantitybox bg-white">
                                                <input type="number" class="quantity-input" value="<%= userCart.product[i].quantity %>" id="quantity_<%= i %>" data-product-id="<%= userCart.product[i]._id %>" data-index="<%= i %>" data-cart-id="<%= userCart._id %>">
                                            </div>
                                        </td>
                                        <td class="bg-light">
                                            <% if (userCart.product[i].productRef.offerRef != null){ %>
                                                <span class="tm-cart-totalprice" id="total_price_<%= i %>">₹<%= ((userCart.product[i].productRef.totalPrice) - (userCart.product[i].productRef.makingCharge * userCart.product[i].productRef.offerRef.offerPercentage / 100)).toFixed(2) * (userCart.product[i].quantity) %></span>
                                            <% } else { %>
                                                <span class="tm-cart-totalprice" id="total_price_<%= i %>">₹<%= (userCart.product[i].productRef.totalPrice * userCart.product[i].quantity).toFixed(2) %></span>
                                            <% } %>
                                        </td>
                                        <td class="bg-light">
                                            <button class="tm-button tm-button-small" onclick="saveForLater('<%= userCart.product[i]._id %>')">Save for Later</button>
                                            <button class="tm-button tm-button-small" onclick="removeFromCart('<%= userCart.product[i]._id, i %>', '<%= i %>')"> Remove </button>
                                            <% if(userCart.product[i].productRef.quantity === 0){ %>
                                                <br><br>
                                                <h6 id="outofstock-error" style="color: red; display: block;"> Currently <br> Unavailable </h6>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% } %>
                            <% } else { %>
                                <tr >
                                    <td colspan="6" class="p-5 text-dark bg-light"> YOUR SHOPPING CART IS EMPTY </td>
                                </tr>
                            <% } %>
    
                        </tbody>
                    </table>
                </div>
            </div>


            
            <div class="row checkout-border-row p-2 mb-5">
                <div class="mt-1">
                    <h4 class="small-title">BILLING INFORMATION</h4>
                </div>
                <div class="tm-checkout-coupon" id="coupon-area">
                    <% if (userCart && userCart.couponRef == null) { %>
                        <a href="#checkout-couponform" data-toggle="collapse">
                            <span>Have a coupon code?</span> Click here and enter your code.
                        </a>
                        <div id="checkout-couponform" class="collapse">
                            <form action="#" class="tm-checkout-couponform">
                                <input type="text" id="coupon-field" placeholder="Enter coupon code" required="required" />
                                <button type="button" class="tm-button" onclick="applyCoupon()">Apply Coupon</button>
                            </form>
                        </div>
                    <% } else { %>
                        <a href="#remove-couponform" data-toggle="collapse">
                            <span class="text-success">You have applied the coupon code <b><%= userCart.couponRef.code %></b> worth <b>₹<%= userCart.couponRef.couponValue %></b>.</span> Click here to change or cancel the coupon.
                        </a>
                        <div id="remove-couponform" class="collapse">
                            <form action="#" class="tm-checkout-couponform" id="remove-coupon-form">
                                <input type="text" id="coupon-field" style="font-size: 25px; font-weight: 900; text-align: center;" 
                                 placeholder="<%= userCart.couponRef.code %>" readonly>
                                <button type="button" class="tm-button" onclick="cancelCoupon()">Cancel Coupon</button>
                            </form>
                        </div>
                    <% } %>
                </div>
                <div class="row">

                    <!-- shipping address section starts -->
                    <div class="col-lg-6">
                        <!-- can give the address details here if needed (and if not given at top of this page) -->
                        <div>
                            <h4 class="small-title">Shipping Address</h4>
                            <% if(userAddress && userAddress.address){ %>
                                <p><b>The following address will be used for shipping by default.</b></p>
                                <a href="#" class="btn add-button btn-success text-white" data-toggle="modal" data-target="#addAddressModal"> Add Address </a>
                                <a href="#" class="btn add-button btn-primary text-white" data-toggle="modal" data-target="#chooseAddressModal">Choose Another Address</a> <br><br>
                                <% for(i=0; i< userAddress.address.length; i++){ %>
                                    <div class="row">
                                        <div class="tm-checkout-address bg-grey pb-4">
                                            <div class="tm-form-inner">
                                                <div class="tm-form-field">
                                                    <div class="text-right">
                                                        <a href="#" class="btn add-button btn-secondary text-white edit-address-link" id="edit-address-link"
                                                            data-toggle="modal" data-target="#editAddressModal" 
                                                            data-address-id="<%= userAddress.address[i]._id %>" 
                                                            data-index="0" 
                                                            data-firstname="<%= userAddress.address[i].firstname %>" 
                                                            data-lastname="<%= userAddress.address[i].lastname %>" 
                                                            data-street="<%= userAddress.address[i].street %>" 
                                                            data-city="<%= userAddress.address[i].city %>" 
                                                            data-state="<%= userAddress.address[i].state %>" 
                                                            data-pincode="<%= userAddress.address[i].pincode %>" 
                                                            data-contact="<%= userAddress.address[i].contact %>" >
                                                            Edit
                                                        </a>
                                                    </div>
                                                    <input type="radio" name="checkout-address" id="checkout-address-<%= i %>" value="<%= userAddress.address[i]._id %>" <%= i === 0 ? 'checked' : '' %> />
                                                    <label for="checkout-address-<%= i %>" class="text-left">
                                                        <b> <%= (userAddress.address[i].firstname).toUpperCase() %> </b>
                                                        <b> <%= (userAddress.address[i].lastname).toUpperCase() %> </b> <br>
                                                    </label>
                                                    <div class="tm-checkout-address-content">
                                                        <p class="text-left">
                                                            <%= userAddress.address[i].street %> <br>
                                                            <%= userAddress.address[i].city %>,
                                                            <%= userAddress.address[i].state %> -
                                                            <%= userAddress.address[i].pincode %> <br>
                                                            Phone: <%= userAddress.address[i].contact %> <br>
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                            <% }else{ %>
                                <p><b>"Hello! <br>
                                    It seems there is no saved address in your profile. <br>
                                    Please add a new address to ensure smooth delivery of your orders. <br>
                                    Thank you!"</b>
                                </p>
                                <a href="#" class="btn add-button btn-success text-white" data-toggle="modal" data-target="#addAddressModal"> Add Address </a> <br><br>
                            <% } %>
                        </div>
                    </div>

                    <!-- checkout summary starts -->
                    <div class="col-lg-6">
                        <div class="tm-checkout-orderinfo">
                            <div class="table-responsive" id="checkout-summary">
                                <h3>Checkout Summary</h3>
                                <table class="table table-borderless tm-checkout-ordertable">
                                    <thead>
                                        <tr>
                                            <th>Products</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (userCart && userCart.product.length > 0){ %>
                                            <% for(i=0; i< userCart.product.length; i++){ %>
                                                <tr>
                                                    <td style="padding: 0.50rem;"> <%= userCart.product[i].productRef.name %> </td>
                                                    <td style="padding: 0.50rem;"> ₹ <%= (userCart.product[i].productRef.totalPrice * userCart.product[i].quantity).toFixed(2) %> </td>
                                                </tr>
                                            <% } %>
                                        <% } %>
                                    </tbody>
                                    <tfoot class="fw-bold">
                                        <tr>
                                            <td colspan="2"><hr style="border: 1px solid black;"></td>
                                        </tr>
                                        <tr class="tm-checkout-subtotal">
                                            <td>SUBTOTAL</td>
                                            <td id="sub-total">₹ <%= subTotal.toFixed(2) %></td>
                                        </tr>
                                        <tr class="tm-checkout-shipping">
                                            <td> Shipping Charge (+) </td>
                                            <td id="shipping-charge">₹ <%= shippingCharge.toFixed(2) %></td>
                                        </tr>
                                        <tr class="tm-checkout-offer">
                                            <td> Offer Discount (-) </td>
                                            <td id="offer-discount" class="text-success">₹ <%= offerDiscount.toFixed(2) %></td>
                                        </tr>
                                        <tr class="tm-checkout-coupon">
                                            <td> Coupon Discount (-) </td>
                                            <td id="coupon-discount" class="text-success">₹ <%= couponDiscount.toFixed(2) %></td>
                                        </tr>
                                        <tr>
                                            <td colspan="2"><hr style="border: 1px solid black;"></td>
                                        </tr>
                                        <tr class="tm-checkout-total-amount">
                                            <td style="font-size: large;"> TOTAL </td>
                                            <td id="total" style="font-size: large;">₹ <%= netPayable.toFixed(2) %></td>
                                        </tr>
                                        <tr class="tm-checkout-round-off">
                                            <td> Round Off </td>
                                            <td id="round-off">₹ <%= roundOffAmount.toFixed(2) %></td>
                                        </tr>
                                        <tr class="tm-checkout-total">
                                            <td>Net Payable </td>
                                            <td id="net-payable"> <h4 style="color: #9a0056;"> <b> ₹ <%= (netPayable - roundOffAmount).toFixed(2) %> </b> </h4></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>

                            <!-- checkout payment methods -->
                            <div class="tm-checkout-payment">
                                <h4>Select Payment Method</h4>
                                <div class="tm-form-inner">
                                    <div class="tm-form-field">
                                        <input type="radio" name="checkout-payment-method" id="checkout-payment-online" value="Online Payment" />
                                        <label for="checkout-payment-online"> Online Payment </label>
                                        <div class="tm-checkout-payment-content">
                                            <p> Make your payment directly into our bank account using net banking facility. </p>
                                        </div>
                                    </div>
                                    <div class="tm-form-field">
                                        <!--removed checked="checked" -->
                                        <input type="radio" name="checkout-payment-method" id="checkout-payment-wallet" value="Wallet" />
                                        <label for="checkout-payment-wallet"> Wallet </label>
                                        <div class="tm-checkout-payment-content">
                                            <p>Pay with your wallet account. <br> Your current wallet balance is <b> ₹<%= userData.walletBalance.toFixed(2) %> </b></p>
                                        </div>
                                        <input type="hidden" id="wallet-balance" value="<%= (userData.walletBalance) %>">
                                    </div>
                                    <div class="tm-form-field">
                                        <input type="radio" name="checkout-payment-method" id="checkout-payment-cashondelivery" value="Cash On Delivery"/>
                                        <label for="checkout-payment-cashondelivery">Cash On Delivery</label>
                                        <div class="tm-checkout-payment-content">
                                            <p>Pay with cash upon delivery.<br>Note: Cash on Delivery orders exceeding ₹2,00,000 are not allowed.</p>
                                        </div>
                                    </div>
                                    <!-- <div class="tm-form-field">
                                        <input type="radio" name="checkout-payment-method" id="checkout-payment-cardpayment" value="Card Payment"/>
                                        <label for="checkout-payment-cardpayment">Card Payment</label>
                                        <div class="tm-checkout-payment-content">
                                            <p>Pay with your credit card or debit card via Stripe.</p>
                                        </div>
                                    </div> -->
                                </div>
                            </div>

                            <!-- checkout submit -->
                            <div class="tm-checkout-submit">
                                <p>
                                    Your personal data will be used to process your order,
                                    support your experience throughout this website, and for
                                    other purposes described in our privacy policy.
                                </p>
                                <div class="tm-form-inner">
                                    <div class="tm-form-field">
                                        <input type="checkbox" name="checkout-read-terms" id="checkout-read-terms"/>
                                        <label for="checkout-read-terms">I have read and agree to the website terms and conditions</label>
                                    </div>
                                    <div class="tm-form-field">
                                        <button type="submit" class="tm-button ml-auto" onclick="checkoutOrder()"> PLACE ORDER </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</main>




<!-- Choose Address List Modal Starts-->
<div class="modal fade" id="chooseAddressModal" tabindex="-1" role="dialog" aria-labelledby="chooseAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="chooseAddressModalLabel">Choose Another Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="address-list">
                    <!-- Address List-->
                    <% if(userAddress && userAddress.address){ %>
                        <% for(i = 0; i < userAddress.address.length; i++){ %>
                            <div class="row mb-3">
                                <div class="col-lg-12">
                                    <div class="tm-myaccount-address-billing bg-grey">
                                        <div class="text-right">
                                            <a href="#" class="btn add-button btn-danger text-white" onclick="deleteAddress('<%= userAddress.address[i]._id %>')">Delete</a>
                                        </div>
                                        <h5> Address <%= i + 1 %></h5>
                                        <address>
                                            <b> <%= (userAddress.address[i].firstname).toUpperCase() %> </b>
                                            <b> <%= (userAddress.address[i].lastname).toUpperCase() %> </b> <br>
                                            <%= userAddress.address[i].street %> <br>
                                            <%= userAddress.address[i].city %> <br>
                                            <%= userAddress.address[i].state %>
                                            <%= userAddress.address[i].pincode %> <br>
                                            Phone: <%= userAddress.address[i].contact %> <br>
                                        </address>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    <% } %>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Choose Address List Modal Ends-->





<!-- Add Address Modal Starts-->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="small-title"><b>ADD BILLING INFORMATION</b></h4>
                <button type="button" class="close bg-black text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="#" class="tm-form tm-checkout-form">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="tm-checkout-billingform">
                                <div class="tm-form-inner">
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="add-firstname">First name<span class="red-asterisk">*</span></label>
                                        <input type="text" id="add-firstname"/>
                                        <span id="firstname-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="add-lastname">Last name<span class="red-asterisk">*</label>
                                        <input type="text" id="add-lastname"/>
                                        <span id="lastname-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field">
                                        <label for="add-address">Address<span class="red-asterisk">*</label>
                                        <input type="text" id="add-address" placeholder="Apartment, Area and Street"/>
                                        <span id="address-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="add-city">City<span class="red-asterisk">*</label>
                                        <input type="text" id="add-city" placeholder="City / Town / District"/>
                                        <span id="city-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="add-pincode">Zip / Postcode<span class="red-asterisk">*</label>
                                        <input type="text" id="add-pincode"/>
                                        <span id="pincode-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf dropdown">
                                        <label for="add-state">State<span class="red-asterisk">*</label><br>
                                        <div class="dropdown-selector">
                                            <input type="text" id="state-input" placeholder="Type to filter states">
                                            <ul class="dropdown-list" id="add-state">
                                                <li data-value="Andhra Pradesh">Andhra Pradesh</li>
                                                <li data-value="Arunachal Pradesh">Arunachal Pradesh</li>
                                                <li data-value="Assam">Assam</li>
                                                <li data-value="Bihar">Bihar</li>
                                                <li data-value="Chhattisgarh">Chhattisgarh</li>
                                                <li data-value="Goa">Goa</li>
                                                <li data-value="Gujarat">Gujarat</li>
                                                <li data-value="Haryana">Haryana</li>
                                                <li data-value="Himachal Pradesh">Himachal Pradesh</li>
                                                <li data-value="Jharkhand">Jharkhand</li>
                                                <li data-value="Karnataka">Karnataka</li>
                                                <li data-value="Kerala">Kerala</li>
                                                <li data-value="Madhya Pradesh">Madhya Pradesh</li>
                                                <li data-value="Maharashtra">Maharashtra</li>
                                                <li data-value="Manipur">Manipur</li>
                                                <li data-value="Meghalaya">Meghalaya</li>
                                                <li data-value="Mizoram">Mizoram</li>
                                                <li data-value="Nagaland">Nagaland</li>
                                                <li data-value="Odisha">Odisha</li>
                                                <li data-value="Punjab">Punjab</li>
                                                <li data-value="Rajasthan">Rajasthan</li>
                                                <li data-value="Sikkim">Sikkim</li>
                                                <li data-value="Tamil Nadu">Tamil Nadu</li>
                                                <li data-value="Telangana">Telangana</li>
                                                <li data-value="Tripura">Tripura</li>
                                                <li data-value="Uttar Pradesh">Uttar Pradesh</li>
                                                <li data-value="Uttarakhand">Uttarakhand</li>
                                                <li data-value="West Bengal">West Bengal</li>
                                                <li data-value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</li>
                                                <li data-value="Chandigarh">Chandigarh</li>
                                                <li data-value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and Daman and Diu</li>
                                                <li data-value="Delhi">Delhi</li>
                                                <li data-value="Lakshadweep">Lakshadweep</li>
                                                <li data-value="Puducherry">Puducherry</li>
                                                <li data-value="Ladakh">Ladakh</li>
                                                <li data-value="Jammu and Kashmir">Jammu and Kashmir</li>
                                            </ul>
                                        </div>
                                        <span id="state-error" style="color: red; display: none;"></span>
                                    </div>
                                    
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="add-phone">Contact No<span class="red-asterisk">*</label>
                                        <input type="text" id="add-phone"/>
                                        <span id="phone-error" style="color: red; display: none;"></span>
                                    </div>
                                    <!-- <div class="tm-form-field">
                                        <input type="checkbox" name="billform-dirrentswitch" id="billform-dirrentswitch"/>
                                        <label for="billform-dirrentswitch"><b>Ship to another address</b></label>
                                    </div> -->
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveChanges"> Save changes </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Close </button>
            </div>
        </div>
    </div>
</div>
<!-- Add Address Modal Ends -->





<!-- Edit Address Modal Starts-->
<div class="modal fade" id="editAddressModal" tabindex="-1" role="dialog" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="small-title"><b>EDIT BILLING INFORMATION</b></h4>
                <button type="button" class="close bg-black text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="#" class="tm-form tm-checkout-form">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="tm-checkout-billingform">
                                <div class="tm-form-inner">
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="edit-firstname">First name<span class="red-asterisk">*</span></label>
                                        <input type="text" id="edit-firstname"/>
                                        <span id="edit-firstname-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="edit-lastname">Last name<span class="red-asterisk">*</label>
                                        <input type="text" id="edit-lastname"/>
                                        <span id="edit-lastname-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field">
                                        <label for="edit-address">Address<span class="red-asterisk">*</label>
                                        <input type="text" id="edit-address" placeholder="Apartment, Area and Street"/>
                                        <span id="edit-address-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="edit-city">City<span class="red-asterisk">*</label>
                                        <input type="text" id="edit-city" placeholder="City / Town / District"/>
                                        <span id="edit-city-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="edit-pincode">Zip / Postcode<span class="red-asterisk">*</label>
                                        <input type="text" id="edit-pincode"/>
                                        <span id="edit-pincode-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field tm-form-fieldhalf dropdown">
                                        <label for="edit-state">State<span class="red-asterisk">*</label><br>
                                        <div class="dropdown-selector">
                                            <input type="text" id="edit-state-input" placeholder="Type to filter states">
                                            <ul class="dropdown-list" id="edit-state">
                                                <li data-value="Andhra Pradesh">Andhra Pradesh</li>
                                                <li data-value="Arunachal Pradesh">Arunachal Pradesh</li>
                                                <li data-value="Assam">Assam</li>
                                                <li data-value="Bihar">Bihar</li>
                                                <li data-value="Chhattisgarh">Chhattisgarh</li>
                                                <li data-value="Goa">Goa</li>
                                                <li data-value="Gujarat">Gujarat</li>
                                                <li data-value="Haryana">Haryana</li>
                                                <li data-value="Himachal Pradesh">Himachal Pradesh</li>
                                                <li data-value="Jharkhand">Jharkhand</li>
                                                <li data-value="Karnataka">Karnataka</li>
                                                <li data-value="Kerala">Kerala</li>
                                                <li data-value="Madhya Pradesh">Madhya Pradesh</li>
                                                <li data-value="Maharashtra">Maharashtra</li>
                                                <li data-value="Manipur">Manipur</li>
                                                <li data-value="Meghalaya">Meghalaya</li>
                                                <li data-value="Mizoram">Mizoram</li>
                                                <li data-value="Nagaland">Nagaland</li>
                                                <li data-value="Odisha">Odisha</li>
                                                <li data-value="Punjab">Punjab</li>
                                                <li data-value="Rajasthan">Rajasthan</li>
                                                <li data-value="Sikkim">Sikkim</li>
                                                <li data-value="Tamil Nadu">Tamil Nadu</li>
                                                <li data-value="Telangana">Telangana</li>
                                                <li data-value="Tripura">Tripura</li>
                                                <li data-value="Uttar Pradesh">Uttar Pradesh</li>
                                                <li data-value="Uttarakhand">Uttarakhand</li>
                                                <li data-value="West Bengal">West Bengal</li>
                                                <li data-value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</li>
                                                <li data-value="Chandigarh">Chandigarh</li>
                                                <li data-value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and Daman and Diu</li>
                                                <li data-value="Delhi">Delhi</li>
                                                <li data-value="Lakshadweep">Lakshadweep</li>
                                                <li data-value="Puducherry">Puducherry</li>
                                                <li data-value="Ladakh">Ladakh</li>
                                                <li data-value="Jammu and Kashmir">Jammu and Kashmir</li>
                                            </ul>
                                        </div>
                                        <span id="edit-state-error" style="color: red; display: none;"></span>
                                    </div>
                                    
                                    <div class="tm-form-field tm-form-fieldhalf">
                                        <label for="edit-phone">Contact No<span class="red-asterisk">*</label>
                                        <input type="text" id="edit-phone"/>
                                        <span id="edit-phone-error" style="color: red; display: none;"></span>
                                    </div>
                                    <div class="tm-form-field">
                                        <input type="checkbox" name="billform-dirrentswitch" id="edit-billform-dirrentswitch"/>
                                        <label for="edit-billform-dirrentswitch"><b>Ship to another address</b></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Close </button>
                <button type="button" class="btn btn-primary" id="updateChanges"> Update </button>
            </div>
        </div>
    </div>
</div>
<!-- Edit Address Modal Ends -->





<!-- Payment Failed Modal -->
<div id="paymentFailedModal" class="payment-failed-modal">
    <div class="failed-modal-content">
        <span class="close">&times;</span>
        <h2>Payment Failed</h2>
        <p>Unfortunately, your payment could not be processed. Please try again.</p>
        <button id="retryPaymentButton">Retry Payment</button>
    </div>
</div>


<!-- Styles for payment failed modal -->
<style>
    .payment-failed-modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1000; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
    }

    .failed-modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }
</style>



<%- include('../layouts/userLayouts/user-footer.ejs') %>




<!-- --------------------------------------------------- -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert2 JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>


<!-- importing the script for add address modal form -->
<script src="/assets/scripts/userScripts/add-address-modal-script.js"></script>
<script src="/assets/scripts/userScripts/edit-address-modal-script.js"></script>



<!-- importing the script for carted items -->
<script src="/assets/scripts/userScripts/cart-and-checkout-scripts.js"></script>
 <!-- (UPDATE CART QUANTITY, 
 REMOVE FROM CART & CHECKOUT, 
 REMOVE OUTOFSTOCK CART ITEMS,
 APPLY COUPON,
 CANCEL COUPON
 etc) -->


 <!-- // importing the wishlist script for save for later (MOVE TO WISHLIST and remvoe from the cart / checkout) -->
<script src="/assets/scripts/userScripts/wishlist-scripts.js"></script>



<!-- importing the razorpay library link -->
<script src="https://checkout.razorpay.com/v1/checkout.js"> </script>
 



<!-- script for placing order -->
<script>

    // for checking checkout options and validations.
    function checkoutOrder() {
        // Check if a shipping address is selected or no address.
        let selectedAddressId = document.querySelector('input[name="checkout-address"]:checked');
        if (!selectedAddressId) {
            Swal.fire({
                title: "No Shipping Address",
                html: `<h6 class="text-danger"> Please select a shipping address or add new one to place your order. </h6>`,
                showConfirmButton: false,
            });
            return;
        }


        // Check if the payment method is selected.
        let selectedPaymentMethod = document.querySelector('input[name="checkout-payment-method"]:checked');
        if (!selectedPaymentMethod) {
            Swal.fire({
                // title: "No Shipping Address",
                html: `<h6 class="text-danger"> Please choose a payment method to place your order. </h6>`,
                showConfirmButton: false,
            });
            return;
        }



        // Check if the terms and conditions checkbox is ticked
        let termsChecked = document.querySelector('input[name="checkout-read-terms"]').checked;
        if (!termsChecked) {
            Swal.fire({
                html: `<p class="text-center text-danger"> You must agree to the terms and conditions before placing the order. </p>`,
                showConfirmButton: false,
            });
            return;
        }


        // Gather the selected address ID and payment method
        selectedAddressId = document.querySelector('input[name="checkout-address"]:checked').value;
        selectedPaymentMethod = document.querySelector('input[name="checkout-payment-method"]:checked').value;

        console.log('selectedAddressId for order : ', selectedAddressId);
        console.log('selectedPaymentMethod for order : ', selectedPaymentMethod);

        // Gather product names and quantities
        let products = [];
        document.querySelectorAll('.tm-cart-productname').forEach(product => {
            products.push(product.textContent);
        });



        let subTotal = document.querySelector('.tm-checkout-subtotal td:nth-child(2)').textContent;
        let shippingCharge = document.querySelector('.tm-checkout-shipping td:nth-child(2)').textContent;
        let offerDiscount = document.querySelector('.tm-checkout-offer td:nth-child(2)').textContent;
        let couponDiscount = document.querySelector('.tm-checkout-coupon td:nth-child(2)').textContent;
        let netAmount = document.querySelector('.tm-checkout-total td:nth-child(2) h4').textContent;

        let walletBalance = parseFloat(document.getElementById('wallet-balance').value);
        let netAmountValue = parseFloat(netAmount.replace(/[^0-9.-]+/g, ""));

        console.log('subTotal to send :', subTotal);
        console.log('shippingCharge to send :', shippingCharge);
        console.log('offerDiscount to send :', offerDiscount);
        console.log('couponDiscount to send :', couponDiscount);
        console.log('netAmount to send :', netAmount);
        console.log('walletBalance to send :', walletBalance);



        if (selectedPaymentMethod === 'Cash On Delivery' && Number(netAmount.replace(/[^0-9.-]+/g, "")) >= 200000) {
            console.log('excess cash transaction....')
            Swal.fire({
                title: "Cash Payment Exceeds Limit",
                html: `<p style="color: red; font-size: 15px"> Cash on Delivery orders exceeding Rs. 200,000 are not allowed.
                    Accepting cash payments above this limit is illegal and can result in a penalty equal to the amount received.
                    Please choose an alternative payment method or reduce your order value. </p>`,
                icon: "warning",
                showConfirmButton: false,
            });
            return;
        }


        // need to check the wallet balance before ordering.
        if (selectedPaymentMethod === 'Wallet' && walletBalance < netAmountValue) {
            console.log('wallet balance is insufficient.');
            Swal.fire({
                title: "Insufficient Wallet Balance",
                html: `<p style="color: red; font-size: 15px"> You have only <b> ₹${walletBalance.toFixed(2)} </b> left in your wallet. <br>
                    Please add money or adjust your cart to place your order.
                    Else, please choose other payment options.`,
                icon: "warning",
                showConfirmButton: false,
            });
            return;
        }
        

        // Gather the shipping address
        let selectedAddressElement = document.querySelector('input[name="checkout-address"]:checked').parentElement;
        let firstName = selectedAddressElement.querySelector('b:nth-of-type(1)').textContent.trim();
        let lastName = selectedAddressElement.querySelector('b:nth-of-type(2)').textContent.trim();
        let street = selectedAddressElement.querySelector('.tm-checkout-address-content p').childNodes[0].textContent.trim();
        let cityStatePincode = selectedAddressElement.querySelector('.tm-checkout-address-content p').childNodes[2].textContent.trim();
        let [city, statePincode] = cityStatePincode.split(',');
        let [state, pincode] = statePincode.trim().split('-');
        let pincodeTrimmed = pincode.trim();
        let contact = selectedAddressElement.querySelector('.tm-checkout-address-content p').childNodes[4].textContent.trim().split(':')[1].trim();
        let fullAddress = `${street}, ${city.trim()}, ${state.trim()} - ${pincodeTrimmed}, Phone: ${contact}`;

        let shippingName = `${firstName} ${lastName}`;
        
        // Format the product list
        let productList = products.map(product => `<li>${product}</li>`).join('');

        
        Swal.fire({
            title: 'Confirm Your Order',
            html: `
                <p>Please review your order details below before proceeding:</p>

                <table style="width:100%; text-align:left;">
                    <tr>
                        <td><strong>Billing To</strong></td>
                        <td><strong>:</strong></td>
                        <td style="vertical-align: top;" class="p-2">${shippingName}</td>
                    </tr>
                    <tr>
                        <td style="vertical-align: top;"><strong>Shipping To</strong></td>
                        <td style="vertical-align: top;"><strong>:</strong></td>
                        <td style="vertical-align: top;" class="p-2">${shippingName}</td>
                    </tr>
                    <tr>
                        <td style="vertical-align: top;"><strong></strong></td>
                        <td style="vertical-align: top;"><strong></strong></td>
                        <td style="vertical-align: top;" class="p-2">${street}<br>${city}<br>${state} - ${pincode}<br>Phone: ${contact}</td>
                    </tr>
                    <tr>
                        <td style="vertical-align: top;"><strong>Items Ordered</strong></td>
                        <td style="vertical-align: top;"><strong>:</strong></td>
                        <td style="vertical-align: top;"><ol>${productList}</ol></td>
                    </tr>
                    <tr>
                        <td><strong>Subtotal</strong></td>
                        <td><strong>:</strong></td>
                        <td class="text-right">${subTotal}</td>
                    </tr>
                    <tr>
                        <td><strong>Shipping Charge</strong></td>
                        <td><strong>:</strong></td>
                        <td class="text-right">${shippingCharge}</td>
                    </tr>
                    <tr>
                        <td><strong>Offer Discount</strong></td>
                        <td><strong>:</strong></td>
                        <td class="text-right">${offerDiscount}</td>
                    </tr>
                    <tr>
                        <td><strong>Coupon Discount</strong></td>
                        <td><strong>:</strong></td>
                        <td class="text-right">${couponDiscount}</td>
                    </tr>
                    <tr>
                        <td><strong>Net Amount</strong></td>
                        <td><strong>:</strong></td>
                        <td class="text-right"><strong>${netAmount}</strong></td>
                    </tr>
                    <tr>
                        <td><strong>Payment Method</strong></td>
                        <td><strong>:</strong></td>
                        <td class="p-2">${selectedPaymentMethod}</td>
                    </tr>
                </table>
                <p>By clicking "Place Order," you agree to our <a href="#" class="terms-link">Terms and Conditions</a> and <a href="#" class="policy-link">Return Policy</a>.</p>
            `,
            icon: 'info',
            showCancelButton: true,
            confirmButtonText: 'Place Order',
            confirmButtonColor: "green",
            cancelButtonText: 'Go Back'
        }).then((result) => {
            if (result.isConfirmed) {
                makePayment(selectedAddressId, selectedPaymentMethod);
            }
        });
    }




    // for proceeding to payment route
    function makePayment(selectedAddressId, selectedPaymentMethod) {
        $.ajax({
            url: '/make-payment',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({selectedAddressId, selectedPaymentMethod}),
            success: function(response) {
                console.log('response from makePayment : ', response);

                if (response.outofstockfound) {
                    const outOfStockList = response.outOfStockItems.map(item => `<li>${item.productRef.name} (Current Stock: ${item.productRef.quantity})</li>`).join('');
                    Swal.fire({
                        icon: 'warning',
                        title: "Unavailable Items Found.",
                        html: `
                            <p> <b> The following products are out of stock or have insufficient quantity in stock: </b> </p>
                            <ul>${outOfStockList}</ul>
                            <p style="font-size: 15px; color: red;">Please remove them or save for later before placing your order. <br> Note: This will also reflect on your coupon discounts based on your subtotal.</p>
                        `,
                        // text: 'Some items in your cart are currently unavailable.. Please remove them or save for later before proceeding to checkout. Note: This will also reflect on your coupon discounts based on your subtotal.',
                        showDenyButton: true,
                        showCancelButton: true,
                        confirmButtonText: "Remove & Proceed",
                        denyButtonText: `Save for later`,
                        cancelButtonText: 'Cancel',
                        confirmButtonColor: "red",
                        // confirmButtonColor: "#3085d6",
                        denyButtonColor: "green",
                    }).then((result) => {
                        if (result.isConfirmed) { // if clicked Remove & Proceed button
                            removeOutOfStockItems(response.outOfStockItems);
                            
                        } else if (result.isDenied) {  // if clicked Save for later button
                            saveOutOfStockItems(response.outOfStockItems);
                        }
                    }).catch((error) => {
                        console.log('outofstockfound Swal error :', error);
                    });

                } else if (response.lowBalance){
                    Swal.fire({
                        title: "Insufficient Wallet Balance",
                        html: `<p style="color: red; font-size: 15px"> You have only <b> ₹${response.walletBalance.toFixed(2)} </b> left in your wallet. <br>
                            Please add money or adjust your cart to place your order.
                            Else, please choose other payment options.`,
                        icon: "warning",
                        showConfirmButton: false,
                    });

                } else if (response.instanceFailed){ // failed / error in creating razorPay instance for order.
                    Swal.fire({
                        title: "Online Payment Failed!",
                        text: `Internal Server Error.! ${response.err.error.description}`,
                        icon: "error",
                        showConfirmButton: false,
                    })

                } else if (response.proceedToOrder){ // directly proceeding to order for "COD and Wallet Payment"
                    placeOrder(response);  // pass response data (selectedAddressId, selectedPaymentMethod, paymentStatus)

                } else if (response.proceedToRazorPay){ // go to payment gateway with razorPay order instance.
                    razorPayPayment(response);  // pass order instance response (order, selectedAddressId, selectedPaymentMethod, paymentStatus, userData)

                } else if (response.error){
                    Swal.fire({
                        title: "Error while making payment.",
                        text: response.message,
                        icon: "error",
                        showConfirmButton: false,
                    });
                }
            },
            error: function(error) {
                console.error('Internal server error in make payment :', error);
                Swal.fire({
                    title: "Payment Failed",
                    text: "Error in make payment. Please try again.",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1500,
                });
            }

        });

    }




    // make online payment after creating the the razorpay instance.
    function razorPayPayment(orderResponse) {
        console.log('orderResponse in razorPayPayment : ', orderResponse);

        // baseUrl is required to display the logo in Razorpay window.
        const baseUrl = window.location.origin; // Gets the current base URL like http://localhost:3000

        const options = {
            "key": orderResponse.razorPayKeyId, // Enter the Key ID generated from the Dashboard
            "amount": orderResponse.order.amount, // Amount is in currency subunits (paise). Default currency is INR. Hence, amount * 100 paise.
            "currency": orderResponse.order.currency, // INR
            "name": "Glitz Jewellery Boutique",
            "description": "Test Transaction",
            "image": `${baseUrl}/assets/images/logos/Glitz-Logo7.png`, // Constructed URL
            "order_id": orderResponse.order.id, // razorPay order.id the backend
            // "callback_url": "https://eneqd3r9zrjok.x.pipedream.net/",
            // callback_url: 'http://localhost:3000/payment-success', // Your success URL
            // handler or callback url if payment success
            "handler": function (response){
                console.log('response in handler (success payment) : ', response);
                // console.log('orderResponse in handler : ', orderResponse);

                // alert(response.razorpay_payment_id);
                // alert(response.razorpay_order_id);
                // alert(response.razorpay_signature);

                // Swal.fire({  // No need to show sweet alert (RazorPay is already showing the success alert)
                //     title: 'Payment Successful!',
                //     text: `Payment ID: ${response.razorpay_payment_id}`,
                //     icon: 'success',
                //     showConfirmButton: false
                // });
                verifyPayment(response, orderResponse);  // sending paymentSuccessResponse and orderResponse
            },
            "prefill": {
                "name": `${orderResponse.userData.firstname} ${orderResponse.userData.lastname}`,
                "email": orderResponse.userData.email,
                "contact": orderResponse.userData.mobile
            },
            "notes": {
                "address": "Razorpay Corporate Office"
            },
            "theme": {
                "color": "#9a0056"
            }
        };

        var rzp1 = new Razorpay(options);

        rzp1.on('payment.failed', function (response){
            console.log('response after the initial payment failed :', response.error);

            // alert(response.error.code);
            // alert(response.error.description);
            // alert(response.error.source);
            // alert(response.error.step);
            // alert(response.error.reason);
            // alert(response.error.metadata.order_id);
            // alert(response.error.metadata.payment_id);

            setTimeout(function() {
                verifyPayment(response, orderResponse);   // sending paymentFailureResponse and orderResponse
            }, 2000);

        });


        // razorPay 'Pay Now' button.
        // document.getElementById('rzp-button1').onclick = function(e){
            rzp1.open();
            // e.preventDefault();
        // }


    }




    // verify the payment.
    function verifyPayment(paymentResponse, orderResponse) {
        console.log('orderResponse in verifyPayment : ', orderResponse);

        $.ajax({
            url : '/verify-payment',
            method : 'POST',
            data : {
                paymentResponse,
                orderResponse
            },
            success: function(response) {
                console.log('response after verifyPayment :', response);

                if (response.verifySuccess) {
                    placeOrder(response.orderResponse); // orderResponse includes selectedAddressId, selectedPaymentMethod, paymentStatus

                } else if (response.verifyFailed){
                    placeOrder(response.orderResponse); // orderResponse includes selectedAddressId, selectedPaymentMethod, paymentStatus
                    // or can directly redirect to the retry-payment?orderId page instead of razorPay's retry payment.
                }
            },
            error: function(error) {
                console.error('Internal server error in verifying payment :', error);
                Swal.fire({
                    title: "Payment Verification Failed",
                    text: "Error in verify payment. Please try again.",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1500,
                });
            }
        });
    }




    // place order / create order in DB after verify payment.
    function placeOrder(Response) {
        console.log('Response received in placeOrder :', Response);

        const addressId = Response.selectedAddressId;
        const paymentMethod = Response.selectedPaymentMethod;
        const paymentStatus = Response.paymentStatus;

        $.ajax({
            url: '/place-order',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({addressId, paymentMethod, paymentStatus}),
            success: function(response) {
                console.log('response from placeOrder : ', response);

                if (response.orderSuccess) {
                    Swal.fire({
                        title: "Order Placed",
                        text: "Your order has been placed successfully.",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1500,
                    }).then(() => {
                        window.location.href = '/order-success'; // redirect order success page after order completed.
                    });

                } else if (response.proceedRetry){
                    window.location.href = `/retry-payment?orderId=${response.pendingOrderData._id}`;

                } else if (response.error){
                    Swal.fire({
                        title: "Error while placing order.",
                        text: response.message,
                        icon: "error",
                        showConfirmButton: false,
                    });
                }
            },
            error: function(error) {
                console.error('Internal server error in placing order :', error);
                Swal.fire({
                    title: "Order Failed",
                    text: "Error in placing order. Please try again.",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1500,
                });
            }

        });



    }





</script>




<!-- styles for checkout page -->
 <style>
.tm-cart-table .tm-cart-col-image {
    width: 150px;
    min-width: 150px;
}
 </style>



<!-- style for address modal -->
<style>
    .red-asterisk {
        color: red;
    }
    
    .dropdown {
        position: relative;
        width: 100%;
    }
    
    .dropdown-selector {
        width: 100%;
    }
    
    #state-input {
        width: calc(100% - 10px);
        padding: 8px;
        border: 1px solid #ccc;
        font-size: 14px;
    }
    
    .dropdown-list {
        position: absolute;
        z-index: 1000;
        top: 100%;
        left: 0;
        width: calc(100% + 2px);
        max-height: 200px;
        overflow-y: auto;
        border: 1px solid #ccc;
        background-color: #fff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        display: none;
    }
    
    .dropdown-list li {
        list-style-type: none;
        padding: 8px 12px;
        cursor: pointer;
    }
    
    .dropdown-list li:hover {
        background-color: #f0f0f0;
    }
</style>
