<%- include('../layouts/userLayouts/user-header.ejs') %>
<%- include('../layouts/userLayouts/user-navbar.ejs') %>

<body>
   <main class="page-content">
      <div class="tm-section tm-login-register-area bg-white tm-padding-section">
         <div class="container">

            <!-- ADMIN FORM -->
            <form class="tm-regular-form" style="margin: 25%;">
               <div>
                  <h4 class="form-title">RESET YOUR PASSWORD</h4>
               </div>
               <br>
               <!-- <div>
                  <p class="form-title-info">We've just sent you an email containing a verification code. Please check your
                     inbox and enter the code here to complete the registration process.</p>
               </div> -->
               <div class="tm-form-inner">
                  <div class="tm-form-field form-group text-start">
                     <label for="login-password">Enter New Password*</label>
                     <input type="password" name="password" id="new-password" class="bg-white">
                     <span id="new-password-error" style="color: orangered; display: none"></span>
                  </div>
                  <div class="tm-form-field form-group text-start">
                     <label for="login-password"> Re-Enter Password*</label>
                     <input type="password" name="confirm-password" id="confirm-password" class="bg-white">
                     <span id="confirm-password-error" style="color: orangered; display: none"></span>
                  </div>
                  <input type="hidden" name="userId" value="<%= tokenUserData._id %>" id="userId">
                  <div class="tm-form-field">
                     <button type="submit" id="confirm-button" class="tm-button ml-auto enter-btn"> Change Password </button> <!-- "btn-block" is removed from class -->
                  </div>
               </div>
            </form>

         </div>
      </div>
   </main>


   <!-- --------------------------------------------------------------- -->



   <!-- plugins:js -->
   <script src="/assets/vendors/adminVendors/js/vendor.bundle.base.js"></script>
   <!-- endinject -->
   <!-- Plugin js for this page -->
   <!-- End plugin js for this page -->
   <!-- inject:js -->
   <script src="/assets/js/adminjs/off-canvas.js"></script>
   <script src="/assets/js/adminjs/hoverable-collapse.js"></script>
   <script src="/assets/js/adminjs/misc.js"></script>
   <script src="/assets/js/adminjs/settings.js"></script>
   <script src="/assets/js/adminjs/todolist.js"></script>
   <!-- endinject -->

   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

   <!-- ----------------------------------------------------------------------- -->


   <!-- reset password form script -->
   <script>
      document.addEventListener("DOMContentLoaded", function () {
         const newPasswordInput = document.getElementById("new-password");
         const confirmPasswordInput = document.getElementById("confirm-password");
         const submitButton = document.getElementById("confirm-button");

         const newPasswordError = document.getElementById("new-password-error");
         const confirmPasswordError = document.getElementById("confirm-password-error");
         const errorMessage = document.getElementById("error-message");


         // Password validation
         function validateExpressions(password) {
            var uppercaseRegex = /[A-Z]/;
            var lowercaseRegex = /[a-z]/;
            var numberRegex = /[0-9]/;
            var symbolRegex = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
            return (
               uppercaseRegex.test(password) &&
               lowercaseRegex.test(password) &&
               numberRegex.test(password) &&
               symbolRegex.test(password)
            );
         }


         submitButton.addEventListener("click", function (event) {
            event.preventDefault();

            // Reset error messages
            newPasswordError.textContent = "";
            confirmPasswordError.textContent = "";

            const newPassword = newPasswordInput.value.trim();
            const confirmPassword = confirmPasswordInput.value.trim();
            const isValidPassword = validateExpressions(newPassword);
            const userId = document.getElementById("userId").value;

            let isValid = true;
            let passwordRequiredErrorShown = false;


            if (!newPassword) {
               newPasswordError.textContent = "Password is required";
               newPasswordError.style.display = "block";
               passwordRequiredErrorShown = true;
               isValid = false;
            }

            if (newPassword.length < 8) {
               if (!passwordRequiredErrorShown) {
                  newPasswordError.textContent = "Password should be at least 8 characters long and include a combination of uppercase and lowercase letters, numbers, and symbols.";
                  newPasswordError.style.display = "block";
               }
               isValid = false;
            } else if (!isValidPassword) {
               if (!passwordRequiredErrorShown) {
                  newPasswordError.textContent = "Password should contain at least one uppercase letter, one lowercase letter, one number, and one symbol.";
                  newPasswordError.style.display = "block";
               }
               isValid = false;
            } else {
               newPasswordError.style.display = "none";
            }


            if (!confirmPassword) {
               confirmPasswordError.textContent = "Password is required";
               confirmPasswordError.style.display = "block";
               passwordRequiredErrorShown = true; // Set the flag to true
               isValid = false;
            } else if (newPassword != confirmPassword) {
               if (!passwordRequiredErrorShown) { // Check the flag
                  confirmPasswordError.textContent = "Password mismatch";
                  confirmPasswordError.style.display = "block";
               }
               isValid = false;
            } else {
               confirmPasswordError.style.display = "none";
            }



            if (!isValid) {
               return; // Prevent form submission
            } else {
               formSubmit(newPassword);
            }


            function formSubmit(newPassword) {
               const url = "/reset-password";

               fetch(url, {
                  method: "POST",
                  headers: {
                     "Content-Type": "application/json",
                  },
                  body: JSON.stringify({ newPassword, userId }),
               })
                  .then((response) => {
                     if (response.ok) {
                        return response.json();
                     } else {
                        console.error("Network response was not ok:", response.status);
                        return response.json();
                     }
                  })
                  .then((data) => {

                     if (data.success) {
                        Swal.fire({
                           title: "Success!",
                           text: "You have successfully changed your password.",
                           icon: "success",
                           showConfirmButton: false,
                           timer: 1500,
                        }).then(() => {
                           window.location.href = "login";
                        });

                     } else {
                        console.error("reset failed");
                     }
                  })
                  .catch((error) => {
                     console.error("Catch Error:", error);
                  });

               window.formSubmit = formSubmit;
            }
         });



         // INDIVIDUAL CHECKING
         newPasswordInput.addEventListener('input', function () {
            if (newPasswordInput.value === "" || newPasswordInput.value.length < 8 && !validateExpressions(newPasswordInput.value)) {
               newPasswordError.textContent = "Password should be at least 8 characters long and include a combination of uppercase and lowercase letters, numbers, and symbols.";
               newPasswordError.style.display = 'block';
               isValid = false;
            } else if (!validateExpressions(newPasswordInput.value)) {
               newPasswordError.textContent = "Password should contain at least one uppercase letter, one lowercase letter, one number, and one symbol.";
               newPasswordError.style.display = 'block';
               isValid = false;
            } else {
               newPasswordError.style.display = 'none';
            }
         });




         confirmPasswordInput.addEventListener('input', function () {
            const confirmPassword = confirmPasswordInput.value.trim();
            const newPassword = newPasswordInput.value.trim();
            const isValidPassword = validateExpressions(newPassword);

            if (!confirmPassword) {
               confirmPasswordError.textContent = "Password is required";
               confirmPasswordError.style.display = "block";
               isValid = false;
            } else if (newPassword != confirmPassword) {
               confirmPasswordError.textContent = "Password mismatch";
               confirmPasswordError.style.display = "block";
               isValid = false;
            } else {
               confirmPasswordError.style.display = "none";
            }
         });



      });
   </script>
   <!-- reset password form script ends -->



   <%- include('../layouts/userLayouts/user-footer.ejs') %>

</body>